// <auto-generated />
using System;
using ControleDeBar.Infraestrutura.Orm.Compartilhado;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ControleDeBar.Infraestrutura.Orm.Migrations
{
    [DbContext(typeof(ControleDeBarDbContext))]
    [Migration("20250714171831_Config_Inicial")]
    partial class Config_Inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ControleDeBar.Dominio.ModuloConta.Conta", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Abertura")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("EstaAberta")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("Fechamento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("GarcomId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("MesaId")
                        .HasColumnType("uuid");

                    b.Property<string>("Titular")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("GarcomId");

                    b.HasIndex("MesaId");

                    b.ToTable("Contas");
                });

            modelBuilder.Entity("ControleDeBar.Dominio.ModuloConta.Pedido", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ContaId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProdutoId")
                        .HasColumnType("uuid");

                    b.Property<int>("QuantidadeSolicitada")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ContaId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("ControleDeBar.Dominio.ModuloGarcom.Garcom", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Garcons");
                });

            modelBuilder.Entity("ControleDeBar.Dominio.ModuloMesa.Mesa", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<int>("Capacidade")
                        .HasColumnType("integer");

                    b.Property<bool>("EstaOcupada")
                        .HasColumnType("boolean");

                    b.Property<int>("Numero")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Mesas");
                });

            modelBuilder.Entity("ControleDeBar.Dominio.ModuloProduto.Produto", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("ControleDeBar.Dominio.ModuloConta.Conta", b =>
                {
                    b.HasOne("ControleDeBar.Dominio.ModuloGarcom.Garcom", "Garcom")
                        .WithMany()
                        .HasForeignKey("GarcomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ControleDeBar.Dominio.ModuloMesa.Mesa", "Mesa")
                        .WithMany()
                        .HasForeignKey("MesaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Garcom");

                    b.Navigation("Mesa");
                });

            modelBuilder.Entity("ControleDeBar.Dominio.ModuloConta.Pedido", b =>
                {
                    b.HasOne("ControleDeBar.Dominio.ModuloConta.Conta", "Conta")
                        .WithMany("Pedidos")
                        .HasForeignKey("ContaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ControleDeBar.Dominio.ModuloProduto.Produto", "Produto")
                        .WithMany("Pedidos")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Conta");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("ControleDeBar.Dominio.ModuloConta.Conta", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("ControleDeBar.Dominio.ModuloProduto.Produto", b =>
                {
                    b.Navigation("Pedidos");
                });
#pragma warning restore 612, 618
        }
    }
}
